USE AdminDb
GO

DROP PROC dbo.EkpoMerge;
GO

CREATE PROC dbo.EkpoMerge AS
BEGIN
MERGE Sap.dbo.Ekpo AS TargetTbl
USING NonHaImportTesting.dbo.ImportEkpo AS SourceTbl
ON (TargetTbl.PoNbr=SourceTbl.[Column 1] AND TargetTbl.PoItmNbr=SourceTbl.[Column 2])
WHEN MATCHED  AND [Column 0] <>  ' ' AND [Column 0] Is Not Null

	AND TargetTbl.[ChangedOn]<>Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 5], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 5], ' ',''),'/',''),5,0,'/'),8,0,'/') end
--===========================================================================================================================

THEN
	UPDATE SET
		TargetTbl.[PoDelId]=SourceTbl.[Column 3]
		,TargetTbl.[RfqStatus]=SourceTbl.[Column 4]
		,TargetTbl.[ChangedOn]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 5], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 5], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[ShortText]=SourceTbl.[Column 6]
		,TargetTbl.[Material]=Try_cast(SourceTbl.[Column 7] as bigint)
		,TargetTbl.[MaterialEMATN]=Try_Cast(SourceTbl.[Column 8] as bigint)
		,TargetTbl.[CompanyCd]=SourceTbl.[Column 9]
		,TargetTbl.[Plant]=SourceTbl.[Column 10]
		,TargetTbl.[StorLoc]=SourceTbl.[Column 11]
		,TargetTbl.[ReqTrackingNbr]=Case When [Column 12] = ' ' Then Null Else [Column 12] End
		,TargetTbl.[MatGrp]=Case When [Column 13] = ' ' Then Null Else [Column 13] End
		,TargetTbl.[NbrPurchInfoRecord]=Case When [Column 14] = ' ' Then Null Else [Column 14] End
		,TargetTbl.[VendorMatNbr]=SourceTbl.[Column 15]
		,TargetTbl.[TargetQty]=SourceTbl.[Column 16]
		,TargetTbl.[PoQty]=SourceTbl.[Column 17]
		,TargetTbl.[PoUnit]=SourceTbl.[Column 18]
		,TargetTbl.[OrderPriceUnit]=SourceTbl.[Column 19]
		,TargetTbl.[NumQtyConversion]=Replace(SourceTbl.[Column 20],'.','')
		,TargetTbl.[DenomQtyConversion]=Replace(SourceTbl.[Column 21],'.','')
		,TargetTbl.[NumEqualTo]=Replace(SourceTbl.[Column 22],'.','')
		,TargetTbl.[DenomEqualTo]=Replace(SourceTbl.[Column 23],'.','')
		,TargetTbl.[PoNetPrice]=SourceTbl.[Column 24]
		,TargetTbl.[PriceUnit]=Replace(SourceTbl.[Column 25],'.','')
		,TargetTbl.[PoNetVal]=SourceTbl.[Column 26]
		,TargetTbl.[PoGrossOrder]=SourceTbl.[Column 27]
		,TargetTbl.[QuoteDeadline]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 28], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 28], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[GrProcessingTime]=Replace(SourceTbl.[Column 29],'.','')
		,TargetTbl.[TaxSalesPurchCd]=SourceTbl.[Column 30]
		,TargetTbl.[SettlementGrp1]=SourceTbl.[Column 31]
		,TargetTbl.[StkTyp]=SourceTbl.[Column 32]
		,TargetTbl.[InfoUpdate]=SourceTbl.[Column 33]
		,TargetTbl.[PrintPrice]=SourceTbl.[Column 34]
		,TargetTbl.[EstPrice]=SourceTbl.[Column 35]
		,TargetTbl.[NbrRemindExp]=Replace(SourceTbl.[Column 36],'.','')
		,TargetTbl.[1stRemindExped]=Replace(SourceTbl.[Column 37],'.','')
		,TargetTbl.[2ndRemindExped]=Replace(SourceTbl.[Column 38],'.','')
		,TargetTbl.[3rdRemindExped]=Replace(SourceTbl.[Column 39],'.','')
		,TargetTbl.[OverDlvryTol]=SourceTbl.[Column 40]
		,TargetTbl.[Unlimited]=SourceTbl.[Column 41]
		,TargetTbl.[UnderDlvryTol]=SourceTbl.[Column 42]
		,TargetTbl.[ValTyp]=SourceTbl.[Column 43]
		,TargetTbl.[ValCat]=SourceTbl.[Column 44]
		,TargetTbl.[RejectionId]=SourceTbl.[Column 45]
		,TargetTbl.[QuoteComment]=SourceTbl.[Column 46]
		,TargetTbl.[DlvryCompletedId]=SourceTbl.[Column 47]
		,TargetTbl.[FinalInvoiceId]=SourceTbl.[Column 48]
		,TargetTbl.[PoItmCat]=SourceTbl.[Column 49]
		,TargetTbl.[AcctAssignmentCat]=SourceTbl.[Column 50]
		,TargetTbl.[ConsumptionPosting]=SourceTbl.[Column 51]
		,TargetTbl.[Distribution]=SourceTbl.[Column 52]
		,TargetTbl.[PartialInvoiceId]=SourceTbl.[Column 53]
		,TargetTbl.[GrId]=SourceTbl.[Column 54]
		,TargetTbl.[GrNonvaluated]=SourceTbl.[Column 55]
		,TargetTbl.[InvoiceReceipt]=SourceTbl.[Column 56]
		,TargetTbl.[GRBasedIV]=SourceTbl.[Column 57]
		,TargetTbl.[AcknowlReqd]=SourceTbl.[Column 58]
		,TargetTbl.[OrderAcknowl]=SourceTbl.[Column 59]
		,TargetTbl.[Agreement]=SourceTbl.[Column 60]
		,TargetTbl.[Agreementitm]=SourceTbl.[Column 61]
		,TargetTbl.[ReconciliationDt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 62], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 62], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[AgreedCumQty]=SourceTbl.[Column 63]
		,TargetTbl.[FirmZon]=SourceTbl.[Column 64]
		,TargetTbl.[TradeOffZone]=SourceTbl.[Column 65]
		,TargetTbl.[BindingOnMRP]=SourceTbl.[Column 66]
		,TargetTbl.[Exclusion]=SourceTbl.[Column 67]
		,TargetTbl.[BaseUnitMeasure]=SourceTbl.[Column 68]
		,TargetTbl.[ShippingInstructions]=SourceTbl.[Column 69]
		,TargetTbl.[TargetVal]=SourceTbl.[Column 70]
		,TargetTbl.[NonDeductible]=SourceTbl.[Column 71]
		,TargetTbl.[ReleaseOrderQty]=SourceTbl.[Column 72]
		,TargetTbl.[PriceDt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 73], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 73], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[PoCat]=SourceTbl.[Column 74]
		,TargetTbl.[EffectiveValItm]=SourceTbl.[Column 75]
		,TargetTbl.[Commitments]=SourceTbl.[Column 76]
		,TargetTbl.[Customer]=SourceTbl.[Column 77]
		,TargetTbl.[ManualAddres]=SourceTbl.[Column 78]
		,TargetTbl.[VendorConditionGrp]=SourceTbl.[Column 79]
		,TargetTbl.[NoCashDiscount]=SourceTbl.[Column 80]
		,TargetTbl.[UpdtGrp]=SourceTbl.[Column 81]
		,TargetTbl.[PlanDlvryTime]=Replace(SourceTbl.[Column 82],'.','')
		,TargetTbl.[NetWeight]=SourceTbl.[Column 83]
		,TargetTbl.[UnitWeight]=SourceTbl.[Column 84]
		,TargetTbl.[TaxJurisdiction]=SourceTbl.[Column 85]
		,TargetTbl.[PrintRelevant]=SourceTbl.[Column 86]
		,TargetTbl.[SpecialStk]=SourceTbl.[Column 87]
		,TargetTbl.[SettlementNbr]=SourceTbl.[Column 88]
		,TargetTbl.[SettlementItmNbr]=Replace(SourceTbl.[Column 89],'.','')
		,TargetTbl.[NotChangeable]=SourceTbl.[Column 90]
		,TargetTbl.[QMControlKey]=SourceTbl.[Column 91]
		,TargetTbl.[CertificateTyp]=SourceTbl.[Column 92]
		,TargetTbl.[EanUpcNbr]=Case When [Column 93] = ' ' Then Null Else [Column 93] End
		,TargetTbl.[ConfirmControlKey]=SourceTbl.[Column 94]
		,TargetTbl.[RevisionLevel]=SourceTbl.[Column 95]
		,TargetTbl.[Fund]=SourceTbl.[Column 96]
		,TargetTbl.[FundsCenter]=SourceTbl.[Column 97]
		,TargetTbl.[CommitmentItm]=SourceTbl.[Column 98]
		,TargetTbl.[BusinessAreaPartner]=SourceTbl.[Column 99]
		,TargetTbl.[PartnerAssumnedBA]=SourceTbl.[Column 100]
		,TargetTbl.[ProfitCenter]=SourceTbl.[Column 101]
		,TargetTbl.[PartnerProfitCenter]=SourceTbl.[Column 102]
		,TargetTbl.[PriceDtCat]=SourceTbl.[Column 103]
		,TargetTbl.[GrossWeight]=SourceTbl.[Column 104]
		,TargetTbl.[Volume]=SourceTbl.[Column 105]
		,TargetTbl.[VolumeUnit]=SourceTbl.[Column 106]
		,TargetTbl.[Incoterms1]=SourceTbl.[Column 107]
		,TargetTbl.[Incoterms2]=SourceTbl.[Column 108]
		,TargetTbl.[AdvanceProcurement]=SourceTbl.[Column 109]
		,TargetTbl.[PriorVendor]=SourceTbl.[Column 110]
		,TargetTbl.[VendorSubrange]=SourceTbl.[Column 111]
		,TargetTbl.[PackageNbr]=SourceTbl.[Column 112]
		,TargetTbl.[InvoicingPlanNbr]=SourceTbl.[Column 113]
		,TargetTbl.[CurrentlyNotUsed]=SourceTbl.[Column 114]
		,TargetTbl.[Statistical]=SourceTbl.[Column 115]
		,TargetTbl.[HighLvlItm]=SourceTbl.[Column 116]
		,TargetTbl.[LatestGrDt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 117], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 117], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[Vendor]=SourceTbl.[Column 118]
		,TargetTbl.[SubcontractingVendor]=SourceTbl.[Column 119]
		,TargetTbl.[CrossplantConfigMat]=SourceTbl.[Column 120]
		,TargetTbl.[MatCat]=SourceTbl.[Column 121]
		,TargetTbl.[KanbanId]=SourceTbl.[Column 122]
		,TargetTbl.[DlvryAddressNbr]=SourceTbl.[Column 123]
		,TargetTbl.[InternalObjectNbr]=SourceTbl.[Column 124]
		,TargetTbl.[ERS]=SourceTbl.[Column 125]
		,TargetTbl.[GrBSettFrom]=case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 126], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 126], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[LastTransmission]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 127], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 127], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[TimeOfTransmission]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 128], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 128], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[SequentialNbr]=SourceTbl.[Column 129]
		,TargetTbl.[Promotion]=SourceTbl.[Column 130]
		,TargetTbl.[AllocationTableNbr]=SourceTbl.[Column 131]
		,TargetTbl.[AllocationTableItmNbr]=SourceTbl.[Column 132]
		,TargetTbl.[Points]=SourceTbl.[Column 133]
		,TargetTbl.[PointsUnit]=SourceTbl.[Column 134]
		,TargetTbl.[SeasonCat]=SourceTbl.[Column 135]
		,TargetTbl.[SeasonYear]=SourceTbl.[Column 136]
		,TargetTbl.[SettleGrp2]=SourceTbl.[Column 137]
		,TargetTbl.[SettleGrp3]=SourceTbl.[Column 138]
		,TargetTbl.[Settlement]=SourceTbl.[Column 139]
		,TargetTbl.[MatLedgerActive]=SourceTbl.[Column 140]
		,TargetTbl.[MinRemShelfLife]=Replace(SourceTbl.[Column 141],'.','')
		,TargetTbl.[RfqNbr]=SourceTbl.[Column 142]
		,TargetTbl.[RfqItmNbr]=Replace(SourceTbl.[Column 143],'.','')
		,TargetTbl.[OriginConfig]=SourceTbl.[Column 144]
		,TargetTbl.[QuotaArrangeUsage]=SourceTbl.[Column 145]
		,TargetTbl.[SpecialStkStkTransId]=SourceTbl.[Column 146]
		,TargetTbl.[PurchRequisitionNbr]=SourceTbl.[Column 147]
		,TargetTbl.[PurchRequisitionItmNbr]=Replace(SourceTbl.[Column 148],'.','')
		,TargetTbl.[MatTyp]=SourceTbl.[Column 149]
		,TargetTbl.[SubItmCat]=SourceTbl.[Column 150]
		,TargetTbl.[SubItmsExist]=SourceTbl.[Column 151]
		,TargetTbl.[Subtotal1]=SourceTbl.[Column 152]
		,TargetTbl.[Subtotal2]=SourceTbl.[Column 153]
		,TargetTbl.[Subtotal3]=SourceTbl.[Column 154]
		,TargetTbl.[Subtotal4]=SourceTbl.[Column 155]
		,TargetTbl.[Subtotal5]=SourceTbl.[Column 156]
		,TargetTbl.[Subtotal6]=SourceTbl.[Column 157]
		,TargetTbl.[ProcessingKey]=SourceTbl.[Column 158]
		,TargetTbl.[MaxCMGQty]=SourceTbl.[Column 159]
		,TargetTbl.[MaxCPGQ]=SourceTbl.[Column 160]
		,TargetTbl.[ReturnsItm]=SourceTbl.[Column 161]
		,TargetTbl.[AllocationTableRel]=SourceTbl.[Column 162]
		,TargetTbl.[ReasonForOrder]=SourceTbl.[Column 163]
		,TargetTbl.[DlvryTypReturns]=SourceTbl.[Column 164]
		,TargetTbl.[MatFreightGrp]=SourceTbl.[Column 165]
		,TargetTbl.[DiscountInKind]=SourceTbl.[Column 166]
		,TargetTbl.[NcmCd]=SourceTbl.[Column 167]
		,TargetTbl.[MatUsage]=SourceTbl.[Column 168]
		,TargetTbl.[MatOrigin]=SourceTbl.[Column 169]
		,TargetTbl.[ProducedInHouse]=SourceTbl.[Column 170]
		,TargetTbl.[MatCfopCat]=SourceTbl.[Column 171]
		,TargetTbl.[CreationProfile]=SourceTbl.[Column 172]
		,TargetTbl.[NextFcstSched]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 173], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 173], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[NextJitSched]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 174], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 174], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[ValuationSpecialStk]=SourceTbl.[Column 175]
		,TargetTbl.[RebateBasis]=SourceTbl.[Column 176]
		,TargetTbl.[JITId]=SourceTbl.[Column 177]
		,TargetTbl.[InflationIndex]=SourceTbl.[Column 178]
		,TargetTbl.[InflationIndexDt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 179], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 179], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[MfgPartProfile]=SourceTbl.[Column 180]
		,TargetTbl.[FinalDlvry]=SourceTbl.[Column 181]
		,TargetTbl.[PartialDlvryAtItmLevelStkTransfer]=SourceTbl.[Column 182]
		,TargetTbl.[UnitsMeasureUsage]=SourceTbl.[Column 183]
		,TargetTbl.[RoundingProfile]=SourceTbl.[Column 184]
		,TargetTbl.[StandardVariant]=SourceTbl.[Column 185]
		,TargetTbl.[ConfigurationChanged]=SourceTbl.[Column 186]
		,TargetTbl.[NoInvoiceForThis]=SourceTbl.[Column 187]
		,TargetTbl.[MfgPartNbr]=SourceTbl.[Column 188]
		,TargetTbl.[Mfg]=SourceTbl.[Column 189]
		,TargetTbl.[ExternalMfg]=SourceTbl.[Column 190]
		,TargetTbl.[ShippingBlock]=SourceTbl.[Column 191]
		,TargetTbl.[Requisitioner]=SourceTbl.[Column 192]
		,TargetTbl.[RecTimeZone]=SourceTbl.[Column 193]
		,TargetTbl.[PeriodId]=SourceTbl.[Column 194]
		,TargetTbl.[SvcBasedInvoiceVerification]=SourceTbl.[Column 195]
		,TargetTbl.[MrpArea]=SourceTbl.[Column 196]
		,TargetTbl.[ConditionsForItmNoInvoice]=SourceTbl.[Column 197]
		,TargetTbl.[ExtPlanning]=SourceTbl.[Column 198]
		,TargetTbl.[StkTransCat]=SourceTbl.[Column 199]
		,TargetTbl.[GrantNbr]=SourceTbl.[Column 200]
		,TargetTbl.[FunctionalArea]=SourceTbl.[Column 201]
		,TargetTbl.[PoItmStat]=SourceTbl.[Column 202]
		,TargetTbl.[IssuingStorLoc]=SourceTbl.[Column 203]
		,TargetTbl.[EarmarkedFunds]=SourceTbl.[Column 204]
		,TargetTbl.[EarmarkedFundsDocItm]=SourceTbl.[Column 205]
		,TargetTbl.[AcceptanceAtOrigin]=SourceTbl.[Column 206]
		,TargetTbl.[SvcBasedCommit]=SourceTbl.[Column 207]
		,TargetTbl.[ReqUrgency]=SourceTbl.[Column 208]
		,TargetTbl.[ReqPriority]=SourceTbl.[Column 209]
		,TargetTbl.[ReceivingPoint]=SourceTbl.[Column 210]
		,TargetTbl.[RejectionReason]=SourceTbl.[Column 211]
		,TargetTbl.[CrmSalesOrderNbr]=SourceTbl.[Column 212]
		,TargetTbl.[CrmSalesOrderItmNbr]=SourceTbl.[Column 213]
		,TargetTbl.[CrmRefOrderNbr]=SourceTbl.[Column 214]
		,TargetTbl.[CrmRefSalesOrderItmNbr]=SourceTbl.[Column 215]
		,TargetTbl.[LastChangerSysTyp]=SourceTbl.[Column 216]
		,TargetTbl.[SourceStkTyp]=SourceTbl.[Column 217]
		,TargetTbl.[CqControlTyp]=SourceTbl.[Column 218]
		,TargetTbl.[NoCQTransmission]=SourceTbl.[Column 219]
		,TargetTbl.[GrReasonCd]=SourceTbl.[Column 220]
		,TargetTbl.[CumulativeGRs]=SourceTbl.[Column 221]
		,TargetTbl.[EwmDlvryToleranceCheck]=SourceTbl.[Column 222]
		,TargetTbl.[ItmNbrLength]=SourceTbl.[Column 223]
		,TargetTbl.[ExternalSorting]=SourceTbl.[Column 224]
		,TargetTbl.[ExternalHierarchyCat]=SourceTbl.[Column 225]
		,TargetTbl.[ItmGenerated]=SourceTbl.[Column 226]
		,TargetTbl.[DependentFree]=SourceTbl.[Column 227]
		,TargetTbl.[StructureCat]=SourceTbl.[Column 228]
		,TargetTbl.[AdviceCd]=SourceTbl.[Column 229]
		,TargetTbl.[AcceptancePeriod]=SourceTbl.[Column 230]
		,TargetTbl.[IuidRelevant]=SourceTbl.[Column 231]
		,TargetTbl.[Configuration]=SourceTbl.[Column 232]
		,TargetTbl.[ConfigurationLine]=SourceTbl.[Column 233]
		,TargetTbl.[AuthorizationNbr]=Replace(SourceTbl.[Column 234],' ','')
		,TargetTbl.[ProgramId1]=SourceTbl.[Column 235]
		,TargetTbl.[SupplierSalesOrderNbr]=SourceTbl.[Column 236]
		,TargetTbl.[ReqDt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 237], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 237], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[CarrierAcctNbr]=SourceTbl.[Column 238]
		,TargetTbl.[CarrierPmtMethod]=SourceTbl.[Column 239]
		,TargetTbl.[ReasonCd]=SourceTbl.[Column 240]
		,TargetTbl.[HardwarePartNbr]=SourceTbl.[Column 241]
		,TargetTbl.[HardwareSerialNbr]=SourceTbl.[Column 242]
		,TargetTbl.[CarrierACNbr]=SourceTbl.[Column 243]
		,TargetTbl.[RefSiteForPurch]=SourceTbl.[Column 244]
		,TargetTbl.[ReferenceItm]=SourceTbl.[Column 245]
		,TargetTbl.[OriginProfile]=SourceTbl.[Column 246]
		,TargetTbl.[KeyInSourceSys]=SourceTbl.[Column 247]
		,TargetTbl.[PutBackId]=SourceTbl.[Column 248]
		,TargetTbl.[OrderListItmNbr]=Replace(SourceTbl.[Column 249],' ','')
		,TargetTbl.[Consignment]=SourceTbl.[Column 250]
		,TargetTbl.[SoLineItmNbr]=Case When [Column 251] = ' ' Or [Column 251] = '000000' Then Null Else [Column 251] End
		,TargetTbl.[EstShipDt]=case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 252], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 252], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[EstDockDt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 253], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 253], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[ExcB2BPoLineUpDt]=SourceTbl.[Column 254]
		,TargetTbl.[DifferentialInvoicing]=SourceTbl.[Column 255]
		,TargetTbl.[RiskRelevancy]=SourceTbl.[Column 256]
		,TargetTbl.[BillingRelCrm]=SourceTbl.[Column 257]
		,TargetTbl.[NbrSerialNbrs]=Case When [Column 258] = ' ' Then Null Else [Column 258] End
		,TargetTbl.[RetentionInPercent]=Case When [Column 259] = ' ' Then Null Else [Column 259] End
		,TargetTbl.[DownPmtId]=SourceTbl.[Column 260]
		,TargetTbl.[DownPmtPct]=Case When [Column 261] = ' ' Then Null Else [Column 261] End
		,TargetTbl.[DownPmtAmt]=SourceTbl.[Column 262]
		,TargetTbl.[DueDtForDownPmt]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 263], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 263], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[StoreReturn]=SourceTbl.[Column 264]
		,TargetTbl.[ExternalDocNbr]=Try_cast(Try_Cast(SourceTbl.[Column 265] as decimal(15,3)) as bigint)
		,TargetTbl.[ExternalDocItmNbr]=Try_cast(Try_Cast(SourceTbl.[Column 266] as decimal(15,3)) as bigint)
		,TargetTbl.[LogSys]=SourceTbl.[Column 267]
		,TargetTbl.[CentralContractNbr]=SourceTbl.[Column 268]
		,TargetTbl.[CentralContractItmNbr]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 269], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 269], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[BlockingReasonId]=SourceTbl.[Column 270]
		,TargetTbl.[BlockingReasonText]=SourceTbl.[Column 271]
		,TargetTbl.[RTConsumption]=SourceTbl.[Column 272]
		,TargetTbl.[FixedDt]=SourceTbl.[Column 273]
		,TargetTbl.[FmBudgetPeriod]=SourceTbl.[Column 274]
		,TargetTbl.[MaxRetailPriceRelevant]=SourceTbl.[Column 275]
		,TargetTbl.[TypSubcontracting]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 276], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 276], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[SerialNbrProfile]=Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 277], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 277], ' ',''),'/',''),5,0,'/'),8,0,'/') end
		,TargetTbl.[SpecialStkSubcontracting]=SourceTbl.[Column 278]
		,TargetTbl.[WBSElement]=Case When [Column 279] = ' ' Then Null Else [Column 279] End
		,TargetTbl.[CustNbr]=SourceTbl.[Column 280]
		,TargetTbl.[SalesDistDocNbr]=Try_Cast(SourceTbl.[Column 281] as bigint)
		,TargetTbl.[SalesDistDocItmNbr]=Try_Cast(SourceTbl.[Column 282] as bigint)
		,TargetTbl.[OwnerStk]=SourceTbl.[Column 283]
		,TargetTbl.[ShippingTyp]=SourceTbl.[Column 284]
		,TargetTbl.[HandoverLoc]=SourceTbl.[Column 285]
		,TargetTbl.[GIBasedGR]=SourceTbl.[Column 286]
		,TargetTbl.[TaxCdAutoDetermined]=SourceTbl.[Column 287]
		,TargetTbl.[ManualTaxCdReason]=SourceTbl.[Column 288]
		,TargetTbl.[TaxIncentiveTyp]=SourceTbl.[Column 289]
		,TargetTbl.[TaxSubjectToSt]=SourceTbl.[Column 290]
		,TargetTbl.[IncentiveId]=SourceTbl.[Column 291]
		,TargetTbl.[USGovt]=SourceTbl.[Column 292]
		,TargetTbl.[StkSegment]=SourceTbl.[Column 293]
		,TargetTbl.[ReqSegment]=SourceTbl.[Column 294]
		,TargetTbl.[FlagSpecialBuy]=SourceTbl.[Column 295]
		,TargetTbl.[CustName]=SourceTbl.[Column 296]
		,TargetTbl.[DtCd]=SourceTbl.[Column 297]
		,TargetTbl.[LotCd]=SourceTbl.[Column 298]
		,TargetTbl.[GovtContractNbr]=Replace(SourceTbl.[Column 299],' ','')
		,TargetTbl.[PriorityRating]=SourceTbl.[Column 300]
		,TargetTbl.[FunLoc]=SourceTbl.[Column 301]
		,TargetTbl.[DtTimeStamp]=Case when TRY_CAST(STUFF(STUFF(STUFF(STUFF(STUFF(SourceTbl.[Column 302],5,0,'/'),8,0,'/'),11,0,' '),14,0,':'),17,0,':') as datetime2) is null then null else STUFF(STUFF(STUFF(STUFF(STUFF(SourceTbl.[Column 302],5,0,'/'),8,0,'/'),11,0,' '),14,0,':'),17,0,':') end
		,TargetTbl.[SalesDocNbr]=Try_Cast(SourceTbl.[Column 303] as bigint)
		,TargetTbl.[SalesDocItmNbr]=Try_Cast(SourceTbl.[Column 304] as bigint)
		,TargetTbl.[Shc]=SourceTbl.[Column 305]
		,TargetTbl.[SpecialFlagId]=SourceTbl.[Column 306]
		,TargetTbl.[FreightConsolidation]=SourceTbl.[Column 307]

--===========================================================================================================================

WHEN NOT MATCHED BY TARGET 
AND SourceTbl.[Column 0] <>  ' ' AND SourceTbl.[Column 0] Is Not Null
	
	THEN
INSERT
	(
	Client--0]
	,PoNbr--1]
	,PoItmNbr--2]
	,PoDelId--3]
	,RfqStatus--4]
	,ChangedOn--5]
	,ShortText--6]
	,Material--7]
	,MaterialEMATN--8]
	,CompanyCd--9]
	,Plant--10]
	,StorLoc--11]
	,ReqTrackingNbr--12]
	,MatGrp--13]
	,NbrPurchInfoRecord--14]
	,VendorMatNbr--15]
	,TargetQty--16]
	,PoQty--17]
	,PoUnit--18]
	,OrderPriceUnit--19]
	,NumQtyConversion--20]
	,DenomQtyConversion--21]
	,NumEqualTo--22]
	,DenomEqualTo--23]
	,PoNetPrice--24]
	,PriceUnit--25]
	,PoNetVal--26]
	,PoGrossOrder--27]
	,QuoteDeadline--28]
	,GrProcessingTime--29]
	,TaxSalesPurchCd--30]
	,SettlementGrp1--31]
	,StkTyp--32]
	,InfoUpdate--33]
	,PrintPrice--34]
	,EstPrice--35]
	,NbrRemindExp--36]
	,[1stRemindExped]--37]
	,[2ndRemindExped]--38]
	,[3rdRemindExped]--39]
	,OverDlvryTol--40]
	,Unlimited--41]
	,UnderDlvryTol--42]
	,ValTyp--43]
	,ValCat--44]
	,RejectionId--45]
	,QuoteComment--46]
	,DlvryCompletedId--47]
	,FinalInvoiceId--48]
	,PoItmCat--49]
	,AcctAssignmentCat--50]
	,ConsumptionPosting--51]
	,Distribution--52]
	,PartialInvoiceId--53]
	,GrId--54]
	,GrNonvaluated--55]
	,InvoiceReceipt--56]
	,GRBasedIV--57]
	,AcknowlReqd--58]
	,OrderAcknowl--59]
	,Agreement--60]
	,Agreementitm--61]
	,ReconciliationDt--62]
	,AgreedCumQty--63]
	,FirmZon--64]
	,TradeOffZone--65]
	,BindingOnMRP--66]
	,Exclusion--67]
	,BaseUnitMeasure--68]
	,ShippingInstructions--69]
	,TargetVal--70]
	,NonDeductible--71]
	,ReleaseOrderQty--72]
	,PriceDt--73]
	,PoCat--74]
	,EffectiveValItm--75]
	,Commitments--76]
	,Customer--77]
	,ManualAddres--78]
	,VendorConditionGrp--79]
	,NoCashDiscount--80]
	,UpdtGrp--81]
	,PlanDlvryTime--82]
	,NetWeight--83]
	,UnitWeight--84]
	,TaxJurisdiction--85]
	,PrintRelevant--86]
	,SpecialStk--87]
	,SettlementNbr--88]
	,SettlementItmNbr--89]
	,NotChangeable--90]
	,QMControlKey--91]
	,CertificateTyp--92]
	,EanUpcNbr--93]
	,ConfirmControlKey--94]
	,RevisionLevel--95]
	,Fund--96]
	,FundsCenter--97]
	,CommitmentItm--98]
	,BusinessAreaPartner--99]
	,PartnerAssumnedBA--100]
	,ProfitCenter--101]
	,PartnerProfitCenter--102]
	,PriceDtCat--103]
	,GrossWeight--104]
	,Volume--105]
	,VolumeUnit--106]
	,Incoterms1--107]
	,Incoterms2--108]
	,AdvanceProcurement--109]
	,PriorVendor--110]
	,VendorSubrange--111]
	,PackageNbr--112]
	,InvoicingPlanNbr--113]
	,CurrentlyNotUsed--114]
	,Statistical--115]
	,HighLvlItm--116]
	,LatestGrDt--117]
	,Vendor--118]
	,SubcontractingVendor--119]
	,CrossplantConfigMat--120]
	,MatCat--121]
	,KanbanId--122]
	,DlvryAddressNbr--123]
	,InternalObjectNbr--124]
	,ERS--125]
	,GrBSettFrom--126]
	,LastTransmission--127]
	,TimeOfTransmission--128]
	,SequentialNbr--129]
	,Promotion--130]
	,AllocationTableNbr--131]
	,AllocationTableItmNbr--132]
	,Points--133]
	,PointsUnit--134]
	,SeasonCat--135]
	,SeasonYear--136]
	,SettleGrp2--137]
	,SettleGrp3--138]
	,Settlement--139]
	,MatLedgerActive--140]
	,MinRemShelfLife--141]
	,RfqNbr--142]
	,RfqItmNbr--143]
	,OriginConfig--144]
	,QuotaArrangeUsage--145]
	,SpecialStkStkTransId--146]
	,PurchRequisitionNbr--147]
	,PurchRequisitionItmNbr--148]
	,MatTyp--149]
	,SubItmCat--150]
	,SubItmsExist--151]
	,Subtotal1--152]
	,Subtotal2--153]
	,Subtotal3--154]
	,Subtotal4--155]
	,Subtotal5--156]
	,Subtotal6--157]
	,ProcessingKey--158]
	,MaxCMGQty--159]
	,MaxCPGQ--160]
	,ReturnsItm--161]
	,AllocationTableRel--162]
	,ReasonForOrder--163]
	,DlvryTypReturns--164]
	,MatFreightGrp--165]
	,DiscountInKind--166]
	,NcmCd--167]
	,MatUsage--168]
	,MatOrigin--169]
	,ProducedInHouse--170]
	,MatCfopCat--171]
	,CreationProfile--172]
	,NextFcstSched--173]
	,NextJitSched--174]
	,ValuationSpecialStk--175]
	,RebateBasis--176]
	,JITId--177]
	,InflationIndex--178]
	,InflationIndexDt--179]
	,MfgPartProfile--180]
	,FinalDlvry--181]
	,PartialDlvryAtItmLevelStkTransfer--182]
	,UnitsMeasureUsage--183]
	,RoundingProfile--184]
	,StandardVariant--185]
	,ConfigurationChanged--186]
	,NoInvoiceForThis--187]
	,MfgPartNbr--188]
	,Mfg--189]
	,ExternalMfg--190]
	,ShippingBlock--191]
	,Requisitioner--192]
	,RecTimeZone--193]
	,PeriodId--194]
	,SvcBasedInvoiceVerification--195]
	,MrpArea--196]
	,ConditionsForItmNoInvoice--197]
	,ExtPlanning--198]
	,StkTransCat--199]
	,GrantNbr--200]
	,FunctionalArea--201]
	,PoItmStat--202]
	,IssuingStorLoc--203]
	,EarmarkedFunds--204]
	,EarmarkedFundsDocItm--205]
	,AcceptanceAtOrigin--206]
	,SvcBasedCommit--207]
	,ReqUrgency--208]
	,ReqPriority--209]
	,ReceivingPoint--210]
	,RejectionReason--211]
	,CrmSalesOrderNbr--212]
	,CrmSalesOrderItmNbr--213]
	,CrmRefOrderNbr--214]
	,CrmRefSalesOrderItmNbr--215]
	,LastChangerSysTyp--216]
	,SourceStkTyp--217]
	,CqControlTyp--218]
	,NoCQTransmission--219]
	,GrReasonCd--220]
	,CumulativeGRs--221]
	,EwmDlvryToleranceCheck--222]
	,ItmNbrLength--223]
	,ExternalSorting--224]
	,ExternalHierarchyCat--225]
	,ItmGenerated--226]
	,DependentFree--227]
	,StructureCat--228]
	,AdviceCd--229]
	,AcceptancePeriod--230]
	,IuidRelevant--231]
	,Configuration--232]
	,ConfigurationLine--233]
	,AuthorizationNbr--234]
	,ProgramId1--235]
	,SupplierSalesOrderNbr--236]
	,ReqDt--237]
	,CarrierAcctNbr--238]
	,CarrierPmtMethod--239]
	,ReasonCd--240]
	,HardwarePartNbr--241]
	,HardwareSerialNbr--242]
	,CarrierACNbr--243]
	,RefSiteForPurch--244]
	,ReferenceItm--245]
	,OriginProfile--246]
	,KeyInSourceSys--247]
	,PutBackId--248]
	,OrderListItmNbr--249]
	,Consignment--250]
	,SoLineItmNbr--251]
	,EstShipDt--252]
	,EstDockDt--253]
	,ExcB2BPoLineUpDt--254]
	,DifferentialInvoicing--255]
	,RiskRelevancy--256]
	,BillingRelCrm--257]
	,NbrSerialNbrs--258]
	,RetentionInPercent--259]
	,DownPmtId--260]
	,DownPmtPct--261]
	,DownPmtAmt--262]
	,DueDtForDownPmt--263]
	,StoreReturn--264]
	,ExternalDocNbr--265]
	,ExternalDocItmNbr--266]
	,LogSys--267]
	,CentralContractNbr--268]
	,CentralContractItmNbr--269]
	,BlockingReasonId--270]
	,BlockingReasonText--271]
	,RTConsumption--272]
	,FixedDt--273]
	,FmBudgetPeriod--274]
	,MaxRetailPriceRelevant--275]
	,TypSubcontracting--276]
	,SerialNbrProfile--277]
	,SpecialStkSubcontracting--278]
	,WBSElement--279]
	,CustNbr--280]
	,SalesDistDocNbr--281]
	,SalesDistDocItmNbr--282]
	,OwnerStk--283]
	,ShippingTyp--284]
	,HandoverLoc--285]
	,GIBasedGR--286]
	,TaxCdAutoDetermined--287]
	,ManualTaxCdReason--288]
	,TaxIncentiveTyp--289]
	,TaxSubjectToSt--290]
	,IncentiveId--291]
	,USGovt--292]
	,StkSegment--293]
	,ReqSegment--294]
	,FlagSpecialBuy--295]
	,CustName--296]
	,DtCd--297]
	,LotCd--298]
	,GovtContractNbr--299]
	,PriorityRating--300]
	,FunLoc--301]
	,DtTimeStamp--302]
	,SalesDocNbr--303]
	,SalesDocItmNbr--304]
	,Shc--305]
	,SpecialFlagId--306]
	,FreightConsolidation--307]
	)
VALUES
	(
	SourceTbl.[Column 0]
	,SourceTbl.[Column 1]
	,SourceTbl.[Column 2]
	,SourceTbl.[Column 3]
	,SourceTbl.[Column 4]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 5], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 5], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 6]
	,Try_cast(SourceTbl.[Column 7] as bigint)
	,Try_Cast(SourceTbl.[Column 8] as bigint)
	,SourceTbl.[Column 9]
	,SourceTbl.[Column 10]
	,SourceTbl.[Column 11]
	,Case When [Column 12] = ' ' Then Null Else [Column 12] End
	,Case When [Column 13] = ' ' Then Null Else [Column 13] End
	,Case When [Column 14] = ' ' Then Null Else [Column 14] End
	,SourceTbl.[Column 15]
	,SourceTbl.[Column 16]
	,SourceTbl.[Column 17]
	,SourceTbl.[Column 18]
	,SourceTbl.[Column 19]
	,Replace(SourceTbl.[Column 20],'.','')
	,Replace(SourceTbl.[Column 21],'.','')
	,Replace(SourceTbl.[Column 22],'.','')
	,Replace(SourceTbl.[Column 23],'.','')
	,SourceTbl.[Column 24]
	,Replace(SourceTbl.[Column 25],'.','')
	,SourceTbl.[Column 26]
	,SourceTbl.[Column 27]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 28], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 28], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,Replace(SourceTbl.[Column 29],'.','')
	,SourceTbl.[Column 30]
	,SourceTbl.[Column 31]
	,SourceTbl.[Column 32]
	,SourceTbl.[Column 33]
	,SourceTbl.[Column 34]
	,SourceTbl.[Column 35]
	,Replace(SourceTbl.[Column 36],'.','')
	,Replace(SourceTbl.[Column 37],'.','')
	,Replace(SourceTbl.[Column 38],'.','')
	,Replace(SourceTbl.[Column 39],'.','')
	,SourceTbl.[Column 40]
	,SourceTbl.[Column 41]
	,SourceTbl.[Column 42]
	,SourceTbl.[Column 43]
	,SourceTbl.[Column 44]
	,SourceTbl.[Column 45]
	,SourceTbl.[Column 46]
	,SourceTbl.[Column 47]
	,SourceTbl.[Column 48]
	,SourceTbl.[Column 49]
	,SourceTbl.[Column 50]
	,SourceTbl.[Column 51]
	,SourceTbl.[Column 52]
	,SourceTbl.[Column 53]
	,SourceTbl.[Column 54]
	,SourceTbl.[Column 55]
	,SourceTbl.[Column 56]
	,SourceTbl.[Column 57]
	,SourceTbl.[Column 58]
	,SourceTbl.[Column 59]
	,SourceTbl.[Column 60]
	,SourceTbl.[Column 61]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 62], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 62], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 63]
	,SourceTbl.[Column 64]
	,SourceTbl.[Column 65]
	,SourceTbl.[Column 66]
	,SourceTbl.[Column 67]
	,SourceTbl.[Column 68]
	,SourceTbl.[Column 69]
	,SourceTbl.[Column 70]
	,SourceTbl.[Column 71]
	,SourceTbl.[Column 72]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 73], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 73], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 74]
	,SourceTbl.[Column 75]
	,SourceTbl.[Column 76]
	,SourceTbl.[Column 77]
	,SourceTbl.[Column 78]
	,SourceTbl.[Column 79]
	,SourceTbl.[Column 80]
	,SourceTbl.[Column 81]
	,Replace(SourceTbl.[Column 82],'.','')
	,SourceTbl.[Column 83]
	,SourceTbl.[Column 84]
	,SourceTbl.[Column 85]
	,SourceTbl.[Column 86]
	,SourceTbl.[Column 87]
	,SourceTbl.[Column 88]
	,Replace(SourceTbl.[Column 89],'.','')
	,SourceTbl.[Column 90]
	,SourceTbl.[Column 91]
	,SourceTbl.[Column 92]
	,Case When [Column 93] = ' ' Then Null Else [Column 93] End
	,SourceTbl.[Column 94]
	,SourceTbl.[Column 95]
	,SourceTbl.[Column 96]
	,SourceTbl.[Column 97]
	,SourceTbl.[Column 98]
	,SourceTbl.[Column 99]
	,SourceTbl.[Column 100]
	,SourceTbl.[Column 101]
	,SourceTbl.[Column 102]
	,SourceTbl.[Column 103]
	,SourceTbl.[Column 104]
	,SourceTbl.[Column 105]
	,SourceTbl.[Column 106]
	,SourceTbl.[Column 107]
	,SourceTbl.[Column 108]
	,SourceTbl.[Column 109]
	,SourceTbl.[Column 110]
	,SourceTbl.[Column 111]
	,SourceTbl.[Column 112]
	,SourceTbl.[Column 113]
	,SourceTbl.[Column 114]
	,SourceTbl.[Column 115]
	,SourceTbl.[Column 116]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 117], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 117], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 118]
	,SourceTbl.[Column 119]
	,SourceTbl.[Column 120]
	,SourceTbl.[Column 121]
	,SourceTbl.[Column 122]
	,SourceTbl.[Column 123]
	,SourceTbl.[Column 124]
	,SourceTbl.[Column 125]
	,case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 126], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 126], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 127], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 127], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 128], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 128], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 129]
	,SourceTbl.[Column 130]
	,SourceTbl.[Column 131]
	,SourceTbl.[Column 132]
	,SourceTbl.[Column 133]
	,SourceTbl.[Column 134]
	,SourceTbl.[Column 135]
	,SourceTbl.[Column 136]
	,SourceTbl.[Column 137]
	,SourceTbl.[Column 138]
	,SourceTbl.[Column 139]
	,SourceTbl.[Column 140]
	,Replace(SourceTbl.[Column 141],'.','')
	,SourceTbl.[Column 142]
	,Replace(SourceTbl.[Column 143],'.','')
	,SourceTbl.[Column 144]
	,SourceTbl.[Column 145]
	,SourceTbl.[Column 146]
	,SourceTbl.[Column 147]
	,Replace(SourceTbl.[Column 148],'.','')
	,SourceTbl.[Column 149]
	,SourceTbl.[Column 150]
	,SourceTbl.[Column 151]
	,SourceTbl.[Column 152]
	,SourceTbl.[Column 153]
	,SourceTbl.[Column 154]
	,SourceTbl.[Column 155]
	,SourceTbl.[Column 156]
	,SourceTbl.[Column 157]
	,SourceTbl.[Column 158]
	,SourceTbl.[Column 159]
	,SourceTbl.[Column 160]
	,SourceTbl.[Column 161]
	,SourceTbl.[Column 162]
	,SourceTbl.[Column 163]
	,SourceTbl.[Column 164]
	,SourceTbl.[Column 165]
	,SourceTbl.[Column 166]
	,SourceTbl.[Column 167]
	,SourceTbl.[Column 168]
	,SourceTbl.[Column 169]
	,SourceTbl.[Column 170]
	,SourceTbl.[Column 171]
	,SourceTbl.[Column 172]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 173], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 173], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 174], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 174], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 175]
	,SourceTbl.[Column 176]
	,SourceTbl.[Column 177]
	,SourceTbl.[Column 178]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 179], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 179], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 180]
	,SourceTbl.[Column 181]
	,SourceTbl.[Column 182]
	,SourceTbl.[Column 183]
	,SourceTbl.[Column 184]
	,SourceTbl.[Column 185]
	,SourceTbl.[Column 186]
	,SourceTbl.[Column 187]
	,SourceTbl.[Column 188]
	,SourceTbl.[Column 189]
	,SourceTbl.[Column 190]
	,SourceTbl.[Column 191]
	,SourceTbl.[Column 192]
	,SourceTbl.[Column 193]
	,SourceTbl.[Column 194]
	,SourceTbl.[Column 195]
	,SourceTbl.[Column 196]
	,SourceTbl.[Column 197]
	,SourceTbl.[Column 198]
	,SourceTbl.[Column 199]
	,SourceTbl.[Column 200]
	,SourceTbl.[Column 201]
	,SourceTbl.[Column 202]
	,SourceTbl.[Column 203]
	,SourceTbl.[Column 204]
	,SourceTbl.[Column 205]
	,SourceTbl.[Column 206]
	,SourceTbl.[Column 207]
	,SourceTbl.[Column 208]
	,SourceTbl.[Column 209]
	,SourceTbl.[Column 210]
	,SourceTbl.[Column 211]
	,SourceTbl.[Column 212]
	,SourceTbl.[Column 213]
	,SourceTbl.[Column 214]
	,SourceTbl.[Column 215]
	,SourceTbl.[Column 216]
	,SourceTbl.[Column 217]
	,SourceTbl.[Column 218]
	,SourceTbl.[Column 219]
	,SourceTbl.[Column 220]
	,SourceTbl.[Column 221]
	,SourceTbl.[Column 222]
	,SourceTbl.[Column 223]
	,SourceTbl.[Column 224]
	,SourceTbl.[Column 225]
	,SourceTbl.[Column 226]
	,SourceTbl.[Column 227]
	,SourceTbl.[Column 228]
	,SourceTbl.[Column 229]
	,SourceTbl.[Column 230]
	,SourceTbl.[Column 231]
	,SourceTbl.[Column 232]
	,SourceTbl.[Column 233]
	,Replace(SourceTbl.[Column 234],' ','')
	,SourceTbl.[Column 235]
	,SourceTbl.[Column 236]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 237], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 237], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 238]
	,SourceTbl.[Column 239]
	,SourceTbl.[Column 240]
	,SourceTbl.[Column 241]
	,SourceTbl.[Column 242]
	,SourceTbl.[Column 243]
	,SourceTbl.[Column 244]
	,SourceTbl.[Column 245]
	,SourceTbl.[Column 246]
	,SourceTbl.[Column 247]
	,SourceTbl.[Column 248]
	,Replace(SourceTbl.[Column 249],' ','')
	,SourceTbl.[Column 250]
	,Case When [Column 251] = ' ' Or [Column 251] = '000000' Then Null Else [Column 251] End
	,case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 252], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 252], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 253], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 253], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 254]
	,SourceTbl.[Column 255]
	,SourceTbl.[Column 256]
	,SourceTbl.[Column 257]
	,Case When [Column 258] = ' ' Then Null Else [Column 258] End
	,Case When [Column 259] = ' ' Then Null Else [Column 259] End
	,SourceTbl.[Column 260]
	,Case When [Column 261] = ' ' Then Null Else [Column 261] End
	,SourceTbl.[Column 262]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 263], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 263], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 264]
	,Try_cast(Try_Cast(SourceTbl.[Column 265] as decimal(15,3)) as bigint)
	,Try_cast(Try_Cast(SourceTbl.[Column 266] as decimal(15,3)) as bigint)
	,SourceTbl.[Column 267]
	,SourceTbl.[Column 268]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 269], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 269], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 270]
	,SourceTbl.[Column 271]
	,SourceTbl.[Column 272]
	,SourceTbl.[Column 273]
	,SourceTbl.[Column 274]
	,SourceTbl.[Column 275]
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 276], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 276], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,Case when TRY_CAST(STUFF(STUFF(Replace(Replace(SourceTbl.[Column 277], ' ',''),'/',''),5,0,'/'),8,0,'/') as datetime2) is null then null else STUFF(STUFF(Replace(Replace(SourceTbl.[Column 277], ' ',''),'/',''),5,0,'/'),8,0,'/') end
	,SourceTbl.[Column 278]
	,Case When [Column 279] = ' ' Then Null Else [Column 279] End
	,SourceTbl.[Column 280]
	,Try_Cast(SourceTbl.[Column 281] as bigint)
	,Try_Cast(SourceTbl.[Column 282] as bigint)
	,SourceTbl.[Column 283]
	,SourceTbl.[Column 284]
	,SourceTbl.[Column 285]
	,SourceTbl.[Column 286]
	,SourceTbl.[Column 287]
	,SourceTbl.[Column 288]
	,SourceTbl.[Column 289]
	,SourceTbl.[Column 290]
	,SourceTbl.[Column 291]
	,SourceTbl.[Column 292]
	,SourceTbl.[Column 293]
	,SourceTbl.[Column 294]
	,SourceTbl.[Column 295]
	,SourceTbl.[Column 296]
	,SourceTbl.[Column 297]
	,SourceTbl.[Column 298]
	,Replace(SourceTbl.[Column 299],' ','')
	,SourceTbl.[Column 300]
	,SourceTbl.[Column 301]
	,Case when TRY_CAST(STUFF(STUFF(STUFF(STUFF(STUFF(SourceTbl.[Column 302],5,0,'/'),8,0,'/'),11,0,' '),14,0,':'),17,0,':') as datetime2) is null then null else STUFF(STUFF(STUFF(STUFF(STUFF(SourceTbl.[Column 302],5,0,'/'),8,0,'/'),11,0,' '),14,0,':'),17,0,':') end
	,Try_Cast(SourceTbl.[Column 303] as bigint)
	,Try_Cast(SourceTbl.[Column 304] as bigint)
	,SourceTbl.[Column 305]
	,SourceTbl.[Column 306]
	,SourceTbl.[Column 307]
	)
;

END

--Truncate Table NonHaImportTesting.dbo.ImportEkpo


--EXEC Admindb.dbo.EkpoMerge