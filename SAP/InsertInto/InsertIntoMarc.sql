TRUNCATE TABLE Sap.dbo.Marc
GO

INSERT INTO sap.[dbo].[Marc](
[Client]
      ,[Material]
      ,[Plant]
      ,[MaintStatus]
      ,[ValTyp]
      ,[ValCat]
      ,[BatchId]
      ,[PSMatStat]  
      ,[ValidFrom]
      ,[AbcId]
      ,[CriticalPart]
      ,[PurGrp]
      ,[UnitOfIssue]
      ,[MatMrpProf]
      ,[MrpTyp]
      ,[MrpCtrllrMatPlan]
      ,[MrpCtrllrBuyer]
      ,[PlanDlvryTime]
      ,[GrProcTime]
      ,[PeriodId]
      ,[AssemblyScrapPercent]
      ,[LotSize]
      ,[ProcTyp]
      ,[SpecProcTyp]
      ,[ReOrderPoint]
      ,[SafetyStk]
      ,[MinLotQty]
      ,[MaxLotQty]
      ,[FixedLotSize]
      ,[RoundingVal]
      ,[MaxStkLvl]
      ,[OrderingCosts]
      ,[IdivColl]
      ,[StorCostsId]
      ,[SelectionMethod]
      ,[DiscontinId]
      ,[EffOutDt]
      ,[FollowUpMat]
      ,[ReqGrp]
      ,[MixedMrp]
      ,[SchedMarginKeyFloats]
      ,[AutomFixPlanOrders]
      ,[ProdOrderReleaseId]
      ,[Backflush]
      ,[ProdSupervisor]
      ,[ProcessTime]
      ,[SetupTime]
      ,[Interoperation]
      ,[BaseQty]
      ,[InHouseProdTime]
      ,[MaxStorage]
      ,[TimeUnitMaxStoragePeriod]
      ,[WithdrawlProdBin]
      ,[RoughCutPlanId]
      ,[OverDlvryTol]
      ,[UnlimitedDlvryId]
      ,[UnderDlvryTol]
      ,[TtlReplenLTime]
      ,[ReplacemtPart]
      ,[Surcharge]
      ,[StateOfMfg]
      ,[PostInspectStk]
      ,[Sample]
      ,[Quarantine]
      ,[QmControlKey]
      ,[MeanInspDur]
      ,[InspPlanId]
      ,[DocReq]
      ,[ActiveSubst]
      ,[InspectInterval]
      ,[NextInspection]
      ,[StkTransfer]
      ,[LoadingGrp]  
      ,[BatchReqId]
      ,[QuotaArrUsage]
      ,[SvcLevel]
      ,[SplittingId]
      ,[PlanVersion]
      ,[ObjectTyp]
      ,[ObjectId]
      ,[AvailCheck]
      ,[FYVariant]
      ,[CorrectionFactors]
      ,[ShipSetupTime]
      ,[BaseQtyCapPlanShip]
      ,[ProcTime]
      ,[Deactivated]
      ,[SupplySource]
      ,[AutoPoAllocId]
      ,[SourceList]
      ,[CommImpCd]
      ,[CtryOfOrigin]
      ,[RegOfOrigin]
      ,[CommCdUnit]
      ,[ExpImportGrp]
      ,[ProfItmCenter]
      ,[StkInTransItm]
      ,[PlanCalendar]
      ,[RepetitiveMfg]
      ,[PlanTimeFence]
      ,[ConsumptionMode]
      ,[BckwdConsPer]
      ,[FwdConsPer]
      ,[VersionId]
      ,[BomAlt]
      ,[BomUsage]
      ,[Grp]
      ,[GrpCounter]
      ,[CostingLotSize]
      ,[SpecProcTypCost]
      ,[ProdUnit]
      ,[ProdStorLoc]
      ,[MrpGrp]
      ,[CompScrap]
      ,[CertificateTyp]
      ,[InspSetup]
      ,[TaktTime]
      ,[CoverageProf]
      ,[FieldName]
      ,[CycleCountPhysInvId]
      ,[VarianceKey]
      ,[SerialNbrProfile]
      ,[IntObjNbrConfig]
      ,[ConfigMat]
      ,[RemProfile]
      ,[NegStks]
      ,[TargetQmSys]
      ,[PlanCycle]
      ,[RoundingProfile]
      ,[RefMatCons]
      ,[RefPlant]
      ,[DtTo]
      ,[Multiplier]
      ,[AutomReset]
      ,[Preference]
      ,[ExemptCert]
      ,[ExemptCertNbr]
      ,[ExemptCertId]
      ,[VendOrderId]
      ,[VendorDeclDt]
      ,[MilitaryGoodsId]
      ,[IRSSvcLevel]
      ,[CoProduct]
      ,[PlanStratGrp]
      ,[IntObjNbrConfigMatPlan]
      ,[StorLocEp]
      ,[BulkMaterial]
      ,[CcIdFixed]
      ,[StkDetermGrp]
      ,[QmMatAuth]
      ,[AdjustmtPeriod]
      ,[TaskListTyp]
      ,[UomGrpUOMGR]
      ,[ConvGrp]
      ,[AirBuoyFact]
      ,[ProdProfile]
      ,[SafetyTimeId]
      ,[SafetyTime]
      ,[ActionControl]
      ,[EnterBatch]
      ,[UomGrp]
      ,[MatFreightGrp]
      ,[StkTransSvPltToPlt]
      ,[StInTransSp]
      ,[SmthPromCons]
      ,[ProdVersionCost]
      ,[FixedPriceCoProd]
      ,[LogisticsGrp]
      ,[DistProf]
      ,[TiedEmptiesStk]
      ,[SlsValTiedEmpt]
      ,[MatCFOPCat]
      ,[EuProdListNbr]
      ,[CapProdGrp]
      ,[CasNbrPharm]
      ,[ProdComNbr]
      ,[ControlCd]
      ,[ItmRelvJITDlvrySchedId]
      ,[MatGrp]
      ,[ProposedSupplyArea]
      ,[FairShareRule]
      ,[PushDistId]
      ,[DeployHorizonDays]
      ,[MinLotSize]
      ,[MaxLotSize]
      ,[FixLotSize]
      ,[LotSizeIncr]
      ,[ThisFieldIsNotUsed]
      ,[ConvTypProdFig]
      ,[StPeriodProfile]
      ,[MrpDepReqmts]
      ,[MrpAreaExists]
      ,[CrossProject]
      ,[OverallProfile]
      ,[MatRelevantAPOId]
      ,[MardhRecAlreadyExists]
      ,[CurrentPeriod]
      ,[YearCurrentPeriod]
      ,[MinSafetyStk]
      ,[DoNotCost]
      ,[PutawayStkRmvl]
      ,[ObjMgmtId]
      ,[ObjRefMat]
      ,[ValGrBlockStk]
      ,[PackGrpVSO]
      ,[PickLineVSO]
      ,[MatNbrPickMatVeVSO]
      ,[PickPkmLengthVSO]
      ,[ConsignControl]
      ,[GiProcTime]
      ,[AcrossPurGrp]
      ,[DeterSchema]
      ,[MinTargetRange]
      ,[MaxTargetRange]
      ,[TargetStk]
      ,[IuidRelev]
      ,[IuidTyp]
      ,[ExtAllocationUii]
      ,[PercentTolPlus]
      ,[PercentTolMinus]
      ,[SegStgy]
      ,[SegStatusMrp]
      ,[SegScope]
      ,[StkSortMethod]
      ,[ConsPrior]
      ,[DiscreteBatchNbr]
      ,[StkProtId]
      ,[OrderAllocRun]
      ,[SeasonActItm]
      ,[PABC]
      ,[ManualFlagId]
      ,[MatReserveLevel]
      ,[MinOrdQtySupplier]
      ,[RohsLevel]
      ,[GreenProdId]
      ,[SupplierCancelWId]
      ,[SupplierLeadTime]
      ,[VendorEdiLeadTime]
      ,[LeadTimeOverrideFlag]
      ,[AvnABCInd]
      ,[RunRate]
      ,[BookLeadTime]
      ,[DaysOfSupply]
      ,[StkProfile]
)
SELECT  
[column 0]
,[column 1]
,[column 2]
,[column 3]
,[column 4]
,[column 5]
,[column 6]
,[column 7]
,Case When Try_Cast(Stuff(Stuff(Replace(Replace([Column 8],'/',''),' ',''),5,0,'/'),8,0,'/') as Datetime2) is null then null else Stuff(Stuff(Replace(Replace([Column 8],'/',''),' ',''),5,0,'/'),8,0,'/') End
,[column 9]
,[column 10]
,[column 11]
,[column 12]
,[column 13]
,[column 14]
,[column 15]
,[column 16]
,[Column 17]=Replace([Column 17],'.','')
,[Column 18]=Replace([Column 18],'.','')
,[column 19]
,[column 20]
,[column 21]
,[column 22]
,[column 23]
,[column 24]
,[column 25]
,[column 26]
,[column 27]
,[column 28]
,[column 29]
,[column 30]
,[column 31]
,[column 32]
,[column 33]
,[column 34]
,[column 35]
,Case When Try_Cast(Stuff(Stuff(Replace(Replace([Column 36],'/',''),' ',''),5,0,'/'),8,0,'/') as Datetime2) is null then null else Stuff(Stuff(Replace(Replace([Column 36],'/',''),' ',''),5,0,'/'),8,0,'/') End
,[column 37]
,[column 38]
,[column 39]
,[column 40]
,[column 41]
,[column 42]
,[column 43]
,[column 44]
,[column 45]
,[column 46]
,[column 47]
,[column 48]
,[column 49]=Replace([Column 49],'.','')
,[column 50]=Replace([Column 50],'.','')
,[column 51]
,[column 52]
,[column 53]
,[column 54]
,[column 55]
,[column 56]
,[column 57]=Replace([Column 57],'.','')
,[column 58]
,[column 59]
,[column 60]
,[column 61]
,[column 62]
,[column 63]=Replace([Column 63],'.','')
,[column 64]
,[column 65]=Replace([Column 65],'.','')
,[column 66]
,[column 67]
,[column 68]=Replace([Column 68],'.','')
,[column 69]=Replace([Column 69],'.','')
,Case When Try_Cast(Stuff(Stuff(Replace(Replace([Column 70],'/',''),' ',''),5,0,'/'),8,0,'/') as Datetime2) is null then null else Stuff(Stuff(Replace(Replace([Column 70],'/',''),' ',''),5,0,'/'),8,0,'/') End
,[column 71]
,[column 72]
,[column 73]
,[column 74]
,[column 75] = Replace([Column 75], ' ', '')
,[column 76]
,[column 77]
,[column 78]
,[column 79]
,[column 80]
,[column 81]
,[column 82]
,[column 83] = Replace([Column 83], ' ', '')
,[column 84]
,[column 85]
,[column 86]
,[column 87]
,[column 88]
,[column 89]
,[column 90] = CASE WHEN [Column 90] = ' ' THEN NULL ELSE [Column 90] END
,[column 91]
,[column 92]
,[column 93]
,[column 94]
,[column 95]
,[column 96]
,[column 97]
,[column 98]
,[column 99]
,[column 100]
,[column 101]
,[column 102]
,[column 103]
,[column 104]
,[column 105]
,[column 106]
,[column 107]
,[column 108]
,[column 109]
,[column 110]
,[column 111]
,[column 112]
,[column 113]
,[column 114]
,[column 115]
,[column 116]=Replace([Column 116],'.','')
,[column 117]
,[column 118]
,[column 119]
,[column 120]
,[column 121]
,[column 122]
,[column 123]
,[column 124]
,[column 125]
,[column 126]
,[column 127]
,[column 128]
,[column 129]
,[column 130]
,Case When Try_Cast(Stuff(Stuff(Replace(Replace([Column 131],'/',''),' ',''),5,0,'/'),8,0,'/') as Datetime2) is null then null else Stuff(Stuff(Replace(Replace([Column 131],'/',''),' ',''),5,0,'/'),8,0,'/') End
,[column 132]
,[column 133]
,[column 134]
,[column 135]
,[column 136]
,Case When Try_Cast(Stuff(Stuff(Replace(Replace([Column 137],'/',''),' ',''),5,0,'/'),8,0,'/') as Datetime2) is null then null else Stuff(Stuff(Replace(Replace([Column 137],'/',''),' ',''),5,0,'/'),8,0,'/') End
,[column 138]
,Case When Try_Cast(Stuff(Stuff(Replace(Replace([Column 139],'/',''),' ',''),5,0,'/'),8,0,'/') as Datetime2) is null then null else Stuff(Stuff(Replace(Replace([Column 139],'/',''),' ',''),5,0,'/'),8,0,'/') End
,[column 140]
,[column 141]
,[column 142]
,[column 143]
,[column 144]
,[column 145]
,[column 146]
,[column 147]
,[column 148]
,[column 149]
,[column 150]=Replace([Column 150],'.','')
,[column 151]
,[column 152]
,[column 153]
,[column 154]
,[column 155]
,[column 156]
,[column 157]
,[column 158]
,[column 159]
,[column 160]
,[column 161]
,[column 162]
,[column 163]
,[column 164]
,[column 165]
,[column 166]
,[column 167]
,[column 168]
,[column 169]
,[column 170]
,[column 171]
,[column 172] = CASE WHEN [Column 172] = ' ' THEN NULL ELSE [Column 172] END
,[column 173]
,[column 174] = CASE WHEN [Column 174] = ' ' THEN NULL ELSE [Column 174] END
,[column 175] = CASE WHEN [Column 175] = ' ' THEN NULL ELSE [Column 175] END
,[column 176]
,[column 177]
,[column 178]
,[column 179]
,[column 180]
,[column 181]
,[column 182]=Replace([Column 182],'.','')
,[column 183]
,[column 184]
,[column 185]
,[column 186]
,[column 187]
,[column 188]
,[column 189]
,[column 190]
,[column 191]
,[column 192]
,[column 193]
,[column 194]
,[column 195]
,[column 196]
,[column 197]
,[column 198]
,[column 199]
,[column 200]
,[column 201]
,[column 202]
,[column 203]
,[column 204]
,[column 205]
,[column 206]
,CASE WHEN LEN([column 215])>0 THEN [column 215] ELSE NULL END
,[column 208]
,[column 209]=Replace([Column 209],'.','')
,[column 210]
,[column 211]
,[column 212]
,[column 213]
,[column 214]
,CASE WHEN LEN([column 215])>0 THEN [column 215] ELSE NULL END
,[column 216]
,[column 217]
,[column 218]
,[column 219]
,[column 220]
,[column 221]
,[column 222]
,[column 223]
,[column 224]
,[column 225]
,[column 226]
,[column 227]
,[column 228]
,[column 229]
,[column 230]
,[column 231]
,[column 232]
,[column 233]
,[column 234]
,[column 235]
,[column 236]
,[column 237]
,[column 238]
,[column 239]
,[column 240]
,[column 241]
,[column 242]
,[column 243]


From NonHaImportTesting.dbo.ImportMarc 
Where [Column 0] <> ' ' AND [Column 0] Is Not Null;


Truncate Table NonHaImportTesting.dbo.ImportMarc
GO


